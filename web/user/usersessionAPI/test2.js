// This is a Javascript test harness that simulates the execution of Lambda function code
// From the command prompt, type "node test.js"

let AWS = require('aws-sdk');
AWS.config.region = 'us-east-1';
const tempPassPhrase = "sweet-dog-721";

const MyLambdaFunction = require('./lambda/index.js'); // assumes single Lambda function with exports.handler

const fs = require("fs");
const myFileName =  `./lambda/helloworld.mp3`; // `${__dirname}/helloworld.mp3`;


const myFile = fs.readFileSync(myFileName);
const myFile64 = myFile.toString('base64');

// console.log(myFile64);

const stats = fs.statSync(myFileName);

const fileSizeInBytes = stats.size;
console.log('mp3 size is ' + fileSizeInBytes);

// saveFile(myFile, 'abcde.mp3', function(result) {
//     console.log('saved, result: ' + result);
//
// });

 // this is the Lambda request data, generated by the Alexa service.  Replace with your actual Alexa request.
const lookupTest =
    { "queryStringParameters" :
        {"tempPassPhrase":tempPassPhrase},
      "path":"/lookup"

    };

const updateTest =
    {
        "queryStringParameters" : {
            "tempPassPhrase":tempPassPhrase
         },
         "path":"/update",
         "body" : {
            "attributes" : {
                "namePronounce": "Leah Danielley"
            }
         }
        , "file": myFile64
    };

let context = {
    'succeed': function (data) {
        console.log(JSON.stringify(data, null,'\t') );
    },
    'fail': function (err) {
        console.log('context.fail occurred');
        console.log(JSON.stringify(err, null,'\t') );
    }
};

function callback(error, data) {
    if(error) {
        console.log('error: ' + error);
    } else {
        console.log(JSON.stringify(JSON.parse(data.body), null, 2));
        result = JSON.parse(data.body);
        // console.log(JSON.stringify(data, null,'\t') );

    }
}

// call the function
MyLambdaFunction['handler'] (updateTest, context, callback);

function saveFile(file, fileName, callback) {

    let fn = `mp3/${fileName}`;

    params = {
        Bucket: 'skill-images-789',
        Key: fn,
        Body: file,
        ACL: "public-read"
    };

    const s3 = new AWS.S3();

    s3.putObject(params, function(err, data) {
        if (err) {
            console.log(err);
            callback('error saving file');

        } else {
            console.log("Successfully uploaded file to S3");
            callback(fn);
        }
    });

}

function returnSample64() {
    return ``;
}
